// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package config

import (
	"context"
)

const getConfig = `-- name: GetConfig :one
SELECT id, start_block, url, status, first_amount, second_amount, time_limit, amount_condition, created_at, updated_at, deleted_at, tg_bot_url, tg_id
FROM config LIMIT 1
`

func (q *Queries) GetConfig(ctx context.Context) (Config, error) {
	row := q.db.QueryRowContext(ctx, getConfig)
	var i Config
	err := row.Scan(
		&i.ID,
		&i.StartBlock,
		&i.Url,
		&i.Status,
		&i.FirstAmount,
		&i.SecondAmount,
		&i.TimeLimit,
		&i.AmountCondition,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.TgBotUrl,
		&i.TgID,
	)
	return i, err
}

const updateConfig = `-- name: UpdateConfig :exec
UPDATE config
SET start_block      = ?,
    url              = ?,
    status           = ?,
    first_amount     = ?,
    second_amount    = ?,
    time_limit       = ?,
    amount_condition = ?
`

type UpdateConfigParams struct {
	StartBlock      int32
	Url             string
	Status          bool
	FirstAmount     interface{}
	SecondAmount    interface{}
	TimeLimit       int32
	AmountCondition interface{}
}

func (q *Queries) UpdateConfig(ctx context.Context, arg UpdateConfigParams) error {
	_, err := q.db.ExecContext(ctx, updateConfig,
		arg.StartBlock,
		arg.Url,
		arg.Status,
		arg.FirstAmount,
		arg.SecondAmount,
		arg.TimeLimit,
		arg.AmountCondition,
	)
	return err
}
